(function webpackUniversalModuleDefinition(root, factory) {
	if(typeof exports === 'object' && typeof module === 'object')
		module.exports = factory();
	else if(typeof define === 'function' && define.amd)
		define([], factory);
	else if(typeof exports === 'object')
		exports["RegEx"] = factory();
	else
		root["RegEx"] = factory();
})(this, function() {
return /******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId])
/******/ 			return installedModules[moduleId].exports;
/******/
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			exports: {},
/******/ 			id: moduleId,
/******/ 			loaded: false
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.loaded = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(0);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ function(module, exports) {

	'use strict';
	
	var RegEx = {
	    REGEXP_PATTERN_ORDER: 0,
	    REGEXP_SET_ORDER: 1,
	
	    /**
	     * @param {RegExp} ptn
	     * @param {string} str
	     * @returns {Array}
	     */
	    match: function match(ptn, str) {
	        return str.match(ptn);
	    },
	
	    /**
	     * @param {RegExp} ptn
	     * @param {string} str
	     * @param {number} [flag]
	     * @returns {Array}
	     */
	    matchAll: function matchAll(ptn, str, flag) {
	        flag = flag || RegEx.REGEXP_PATTERN_ORDER;
	        var ret = [],
	            rst = void 0;
	
	        if (ptn.global) while ((rst = ptn.exec(str)) !== null) {
	            ret.push(rst);
	        } else if ((rst = str.match(ptn)) !== null) ret.push(rst);
	
	        if (flag === RegEx.REGEXP_PATTERN_ORDER) {
	            var ret2 = [],
	                item = [];
	
	            for (var i = 0; i < ret.length; i++) {
	                item.push(ret[i][0] + '');
	            }if (item.length > 0) ret2.push(item);
	
	            for (var _i = 0; _i < ret.length; _i++) {
	                item = [];
	                for (var j = 1; j < ret[_i].length; j++) {
	                    item.push(ret[_i][j]);
	                }if (item.length > 0) ret2.push(item);
	            }
	
	            ret = ret2;
	        }
	
	        return ret;
	    }
	};
	
	module.exports = RegEx;

/***/ }
/******/ ])
});
;
//# sourceMappingURL=regex-match-all.js.map